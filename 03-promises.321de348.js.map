{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAWC,SAASC,cAAc,yBAClCC,EAAUF,SAASC,cAAc,SAoCvC,SAASE,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MA7CPH,EAAQW,iBAAiB,UAEzB,SAAuBC,GACrBA,EAAEC,iBAEFhB,EAASiB,UAAW,EACpB,IAEmBC,EAAfH,EAAEI,cADJC,SAAYC,EAAKH,EAALZ,MAAOgB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAEvBC,EAAUC,OAAOJ,EAAMK,OACvBC,EAASF,OAAOH,EAAKI,OACrBE,EAAWH,OAAOF,EAAOG,OAEzBG,EAAaL,EAAUG,EAASC,EAEpC,GAAIJ,EAAU,GAAKG,EAAS,GAAKC,EAAW,EAE1C,YADA9B,EAAAgC,OAAOC,QAAQ,OAIjB,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAUI,GAAY,EACvD5B,EAAc4B,EAAUR,GACrBS,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,M,OACjBR,EAAAgC,OAAOK,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,UAE9D+B,OAAM,SAAAH,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,M,OAClBR,EAAAgC,OAAOC,QAAQ,sBAAqCK,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,UAG9DkB,GAAWG,EAEbxB,EAAQmC,QAkBQC,EAjBPV,EAkBThB,YAAW,WACTb,EAASiB,UAAW,IAEnBsB,GAJL,IAAkBA,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst startBtn = document.querySelector('button[type=\"submit\"]');\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onFormaSubmit);\n\nfunction onFormaSubmit(e) {\n  e.preventDefault();\n\n  startBtn.disabled = true;\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  let delayEl = Number(delay.value);\n  let stepEl = Number(step.value);\n  let amountEl = Number(amount.value);\n\n  let totalDelay = delayEl + stepEl * amountEl;\n\n  if (delayEl < 0 || stepEl < 0 || amountEl < 0) {\n    Notify.failure('WTF');\n    return;\n  }\n\n  for (let position = 1; position <= amountEl; position += 1) {\n    createPromise(position, delayEl)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n\n    delayEl += stepEl;\n  }\n  formRef.reset();\n  onOffBtn(totalDelay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((Fulfill, Reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        Fulfill({ position, delay });\n      } else {\n        Reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onOffBtn(total) {\n  setTimeout(() => {\n    startBtn.disabled = false;\n    \n  }, total);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$startBtn","document","querySelector","$ce04d3a99e08e73b$var$formRef","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","Fulfill","Reject","setTimeout","addEventListener","e","preventDefault","disabled","_elements","currentTarget","elements","delay1","step","amount","delayEl","Number","value","stepEl","amountEl","totalDelay","Notify","failure","position1","then","param","success","concat","catch","reset","total"],"version":3,"file":"03-promises.321de348.js.map"}